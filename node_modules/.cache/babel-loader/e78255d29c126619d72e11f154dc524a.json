{"ast":null,"code":"var _jsxFileName = \"W:\\\\Study\\\\BlogReactUI\\\\reactblogproject\\\\src\\\\article\\\\ueditor.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getarticlelist } from '../store/action';\nimport { message, Col, Row, Form, Input, Button } from 'antd';\nimport ReactDOM from 'react-dom';\nimport E from 'wangeditor';\nimport moment from 'moment';\nimport axios from 'axios';\nconst uploadurl = 'api/photos/upload';\nconst aticleurl = 'api/addarticle';\n\nclass Uedit extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (!err) {\n          console.log(values);\n          let sendobj = {\n            \"title\": values.title,\n            \"author\": this.props.nickname,\n            \"headurl\": this.props.headurl,\n            \"account\": this.props.user,\n            \"content\": values.detail,\n            \"like\": [],\n            \"comment\": [],\n            'constructdate': moment().format('YYYY-MM-DD hh:mm:ss.SSS'),\n            'dateid': Date.now().toString()\n          };\n          axios({\n            url: aticleurl,\n            method: 'post',\n            data: sendobj\n          }).then(data => {\n            let res = data.data;\n\n            if (res === 'success') {\n              message.success(\"发表文章成功!\");\n              this.props.getarticlelist([sendobj, ...this.props.articlelist]);\n              this.props.history.push('/article');\n            } else {\n              message.error(\"发表失败！\");\n            }\n          });\n        }\n      });\n    };\n\n    this.validateEditorFrom = (rule, value, callback) => {\n      if (this.state.editorText.trim() === '') {\n        callback('内容不能为空');\n      }\n\n      callback();\n    };\n\n    let islogin = props.islogin;\n\n    if (!islogin) {\n      message.warn(\"请登录后使用\");\n      this.props.history.push('/article');\n    }\n\n    this.state = {\n      editorHtml: '',\n      editorText: ''\n    };\n  }\n\n  componentDidMount() {\n    const editor = new E(ReactDOM.findDOMNode(this._div));\n    this.editor = editor;\n    editor.customConfig.zIndex = 100; // editor.customConfig.uploadImgServer = utils.url + '/fileclient-management/api/uploadpic'\n    // 限制一次最多上传 1 张图片\n\n    editor.customConfig.uploadImgMaxLength = 1;\n\n    editor.customConfig.onchange = html => {\n      this.setState({\n        editorHtml: html,\n        editorText: editor.txt.text()\n      });\n      this.props.form.setFieldsValue({\n        'detail': html\n      });\n    };\n\n    editor.customConfig.customUploadImg = function (files, insert) {\n      if (files[0]) {\n        const formData = new window.FormData();\n        formData.append('file', files[0], 'cover.jpg');\n        axios({\n          url: uploadurl,\n          method: 'POST',\n          data: formData\n        }).then(data => {\n          let res = data.data;\n\n          if (res) {\n            console.log(res.jpgurl);\n            insert('api/' + res.jpgurl);\n          }\n        });\n      } else {\n        message.info('请选择上传的图片');\n      }\n    };\n\n    editor.customConfig.menus = ['head', // 标题\n    'bold', // 粗体\n    'fontSize', // 字号\n    // 'fontName', // 字体\n    'italic', // 斜体\n    'underline', // 下划线\n    'strikeThrough', // 删除线\n    'foreColor', // 文字颜色\n    // 'backColor', // 背景颜色\n    'link', // 插入链接\n    'list', // 列表\n    'justify', // 对齐方式\n    'quote', // 引用\n    // 'emoticon', // 表情\n    'image', // 插入图片\n    // 'table', // 表格\n    // 'video', // 插入视频\n    // 'code', // 插入代码\n    'undo', // 撤销\n    'redo' // 重复\n    ];\n    editor.customConfig.lang = {\n      '设置标题': 'Title',\n      '字号': 'Size',\n      '文字颜色': 'Color',\n      '设置列表': 'List',\n      '有序列表': '',\n      '无序列表': '',\n      '对齐方式': 'Align',\n      '靠左': '',\n      '居中': '',\n      '靠右': '',\n      '正文': 'p',\n      '链接文字': 'link text',\n      '链接': 'link',\n      '上传图片': 'Upload',\n      '网络图片': 'Web',\n      '图片link': 'image url',\n      '插入视频': 'Video',\n      '格式如': 'format',\n      '上传': 'Upload',\n      '创建': 'init'\n    };\n    editor.create();\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        span: 0\n      },\n      xl: {\n        span: 4\n      },\n      style: {\n        height: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: {\n        span: 24\n      },\n      xl: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, getFieldDecorator('title', {\n      rules: [{\n        required: true,\n        message: '请输入标题'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u6807\\u9898\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, getFieldDecorator('detail', {\n      rules: [{\n        validator: this.validateEditorFrom\n      }],\n      initialValue: ''\n    })(React.createElement(\"div\", {\n      ref: ref => this._div = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"\\u63D0\\u4EA4\"))), React.createElement(Col, {\n      xs: {\n        span: 0\n      },\n      xl: {\n        span: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst Ueditor = Form.create()(Uedit);\nexport default connect((props, state) => Object.assign({}, props, state), {\n  getarticlelist\n})(Ueditor);","map":{"version":3,"sources":["W:\\Study\\BlogReactUI\\reactblogproject\\src\\article\\ueditor.js"],"names":["React","connect","getarticlelist","message","Col","Row","Form","Input","Button","ReactDOM","E","moment","axios","uploadurl","aticleurl","Uedit","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","sendobj","title","nickname","headurl","user","detail","format","Date","now","toString","url","method","data","then","res","success","articlelist","history","push","error","validateEditorFrom","rule","value","callback","state","editorText","trim","islogin","warn","editorHtml","componentDidMount","editor","findDOMNode","_div","customConfig","zIndex","uploadImgMaxLength","onchange","html","setState","txt","text","setFieldsValue","customUploadImg","files","insert","formData","window","FormData","append","jpgurl","info","menus","lang","create","render","getFieldDecorator","span","height","rules","required","validator","initialValue","ref","Ueditor","Object","assign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getarticlelist} from '../store/action';\r\nimport {message,Col,Row,Form,Input,Button} from 'antd';\r\nimport ReactDOM from 'react-dom';\r\nimport E from 'wangeditor';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\n\r\nconst uploadurl='api/photos/upload';\r\nconst aticleurl='api/addarticle';\r\n\r\nclass Uedit extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    let islogin=props.islogin;\r\n    if(!islogin){\r\n      message.warn(\"请登录后使用\");\r\n      this.props.history.push('/article');\r\n    }\r\n    this.state = {\r\n      editorHtml: '',\r\n      editorText: '',\r\n    }\r\n\t}\r\n  componentDidMount(){\r\n    const editor = new E(ReactDOM.findDOMNode(this._div))\r\n    this.editor = editor;\r\n    editor.customConfig.zIndex = 100\r\n    // editor.customConfig.uploadImgServer = utils.url + '/fileclient-management/api/uploadpic'\r\n    // 限制一次最多上传 1 张图片\r\n    editor.customConfig.uploadImgMaxLength = 1\r\n    editor.customConfig.onchange = (html) => {\r\n      this.setState({\r\n        editorHtml: html,\r\n        editorText: editor.txt.text()\r\n      })\r\n      this.props.form.setFieldsValue({\r\n        'detail': html\r\n      });\r\n    }\r\n    editor.customConfig.customUploadImg=function(files, insert){\r\n      if (files[0]) {\r\n        const formData = new window.FormData()\r\n        formData.append('file', files[0], 'cover.jpg')\r\n        axios( {\r\n          url:uploadurl,\r\n          method: 'POST',\r\n          data: formData\r\n        }).then((data) => {   \r\n          let res=data.data;      \r\n          if (res) {\r\n            console.log(res.jpgurl);\r\n            insert('api/'+res.jpgurl);\r\n          }\r\n        })\r\n      }else {\r\n        message.info('请选择上传的图片')\r\n      }\r\n    }\r\n    editor.customConfig.menus=[\r\n      'head', // 标题\r\n      'bold', // 粗体\r\n      'fontSize', // 字号\r\n      // 'fontName', // 字体\r\n      'italic', // 斜体\r\n      'underline', // 下划线\r\n      'strikeThrough', // 删除线\r\n      'foreColor', // 文字颜色\r\n      // 'backColor', // 背景颜色\r\n      'link', // 插入链接\r\n      'list', // 列表\r\n      'justify', // 对齐方式\r\n      'quote', // 引用\r\n      // 'emoticon', // 表情\r\n      'image', // 插入图片\r\n      // 'table', // 表格\r\n      // 'video', // 插入视频\r\n      // 'code', // 插入代码\r\n      'undo', // 撤销\r\n      'redo' // 重复\r\n    ]\r\n    editor.customConfig.lang={\r\n      '设置标题': 'Title',\r\n      '字号': 'Size',\r\n      '文字颜色': 'Color',\r\n      '设置列表': 'List',\r\n      '有序列表': '',\r\n      '无序列表': '',\r\n      '对齐方式': 'Align',\r\n      '靠左': '',\r\n      '居中': '',\r\n      '靠右': '',\r\n      '正文': 'p',\r\n      '链接文字': 'link text',\r\n      '链接': 'link',\r\n      '上传图片': 'Upload',\r\n      '网络图片': 'Web',\r\n      '图片link': 'image url',\r\n      '插入视频': 'Video',\r\n      '格式如': 'format',\r\n      '上传': 'Upload',\r\n      '创建': 'init'\r\n    }\r\n    editor.create()\r\n  } \r\n  handleSubmit=e=>{\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err,values)=>{\r\n      if (!err) {console.log(values);\r\n        let sendobj={\r\n            \"title\":values.title,\"author\":this.props.nickname,\"headurl\":this.props.headurl,\"account\":this.props.user,\r\n            \"content\":values.detail,\"like\":[],\"comment\":[],'constructdate':moment().format('YYYY-MM-DD hh:mm:ss.SSS'),\r\n            'dateid':Date.now().toString()\r\n        }\r\n        axios({\r\n          url:aticleurl,\r\n            method:'post',\r\n            data:sendobj\r\n        }).then((data)=>{\r\n          let res=data.data;\r\n          if(res==='success'){\r\n            message.success(\"发表文章成功!\");\r\n            this.props.getarticlelist([\r\n              sendobj,...this.props.articlelist\r\n            ]);\r\n            this.props.history.push('/article');\r\n          }else{\r\n            message.error(\"发表失败！\");\r\n          }\r\n        })    \r\n      }\r\n    })\r\n  }\r\n  validateEditorFrom=(rule,value,callback)=>{\r\n    if(this.state.editorText.trim()===''){\r\n        callback('内容不能为空');\r\n      }\r\n      callback();\r\n    }\r\n\trender(){\r\n    const { getFieldDecorator } = this.props.form;\r\n\t\treturn (\r\n      <Row>\r\n        <Col xs={{span:0}} xl={{span:4}} style={{height:100}}></Col>\r\n        <Col xs={{span:24}} xl={{span:16}}>\r\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n          <Form.Item>\r\n            {getFieldDecorator('title', {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: '请输入标题',\r\n                },\r\n              ],\r\n            })(<Input placeholder=\"请输入标题\"/>)}\r\n          </Form.Item>\r\n          <Form.Item>\r\n          {getFieldDecorator('detail', {\r\n              rules: [\r\n                {validator: this.validateEditorFrom}\r\n              ], initialValue: ''\r\n            })(<div ref={(ref) => this._div = ref}></div>)}\r\n          </Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n          提交\r\n          </Button>\r\n        </Form>\r\n        </Col>\r\n        <Col xs={{span:0}} xl={{span:4}}></Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\nconst  Ueditor= Form.create()(Uedit);\r\nexport default connect((props,state)=>(Object.assign({},props,state)),{getarticlelist})(Ueditor)"]},"metadata":{},"sourceType":"module"}