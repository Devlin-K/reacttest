{"ast":null,"code":"var _jsxFileName = \"W:\\\\Study\\\\BlogReactUI\\\\reactblogproject\\\\src\\\\message\\\\message.js\";\nimport React from 'react';\nimport { Comment, List, Form, Button, Input, Col, Row, message } from 'antd';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { getmessagelist, getdetailcomments } from '../store/action';\nimport axios from 'axios';\nconst achieveurl = 'api/getmessage';\nconst messageurl = 'api/addmessage';\nconst delmessageurl = 'api/delmessage';\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({\n  comments,\n  user,\n  self,\n  path,\n  articleid\n}) => React.createElement(List, {\n  pagination: {\n    pageSize: 5\n  },\n  dataSource: comments,\n  header: \"\".concat(comments.length, \"\\u6761\\u7559\\u8A00\"),\n  itemLayout: \"horizontal\",\n  renderItem: item => React.createElement(List.Item, {\n    actions: [React.createElement(\"a\", {\n      href: \"/\",\n      onClick: e => {\n        e.preventDefault();\n\n        if (path !== '/articledetail/:id') {\n          let sendobj = {\n            'datetime': item.constructdate\n          };\n          let index;\n\n          for (let i = 0; i < comments.length; i++) {\n            if (comments[i]['datetime'] === item.constructdate) {\n              index = i;\n            }\n          }\n\n          axios({\n            url: delmessageurl,\n            method: 'post',\n            data: sendobj\n          }).then(res => {\n            let data = res.data;\n\n            if (data === 'success') {\n              message.success(\"删除成功\");\n              comments.splice(index, 1);\n              self();\n            } else {\n              message.error(\"删除失败\");\n            }\n          });\n        } else {\n          let sendobj = {\n            'datetime': item.constructdate,\n            'dateid': articleid\n          };\n          let index;\n          console.log(comments, '09090');\n\n          for (let i = 0; i < comments.length; i++) {\n            if (comments[i]['constructdate'] === item.constructdate) {\n              index = i;\n            }\n          }\n\n          axios({\n            url: delmessageurl,\n            method: 'post',\n            data: sendobj\n          }).then(res => {\n            let data = res.data;\n\n            if (data === 'success') {\n              message.success(\"删除成功\");\n              comments.splice(index, 1);\n              self();\n            } else {\n              message.error(\"删除失败\");\n            }\n          });\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, item.user === user ? '删除' : '')],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Comment, {\n    content: React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, item.content),\n    avatar: item.headurl,\n    author: item.nickname,\n    datetime: item.constructdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}, React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n})), React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, React.createElement(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, \"\\u6DFB\\u52A0\\u7559\\u8A00\")));\n\nconst Nocomment = () => React.createElement(\"p\", {\n  className: \"nocomment\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 91\n  },\n  __self: this\n}, \"No More Messages...\");\n\nconst Commentstate = () => React.createElement(\"p\", {\n  style: {\n    textAlign: 'center',\n    fontSize: '18px',\n    marginTop: '50px'\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, \"You Can Leave Message After Login In.\");\n\nclass Message extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitting: false,\n      value: '',\n      comments: []\n    };\n\n    this.handleSubmit = () => {\n      if (!this.state.value) {\n        return;\n      }\n\n      this.setState({\n        submitting: true\n      });\n      setTimeout(() => {\n        let nickname = this.props.nickname;\n        let user = this.props.user;\n        let headurl = this.props.headurl;\n        let comment = this.state.value;\n        let ti = moment().format(\"YYYY-MM-DD hh:mm:ss.SSS\");\n        let id;\n\n        if (this.props.detailcomments) {\n          id = this.props.detailcomments.dateid;\n        } else {\n          id = '';\n        }\n\n        let sendobj = {\n          'nickname': nickname,\n          'user': user,\n          'headurl': headurl,\n          'content': comment,\n          'datetime': ti,\n          'id': id\n        };\n        axios({\n          url: messageurl,\n          method: 'post',\n          data: sendobj\n        }).then(res => {\n          let data = res.data;\n\n          if (data === 'success' && this.props.path !== \"/articledetail/:id\") {\n            this.props.getmessagelist([{\n              user: this.props.user,\n              nickname: this.props.nickname,\n              headurl: this.props.headurl,\n              content: React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 157\n                },\n                __self: this\n              }, this.state.value),\n              constructdate: ti\n            }, ...this.props.messagelist]);\n            this.setState({\n              submitting: false,\n              value: ''\n            });\n            message.success('发送成功');\n          }\n\n          if (data === 'success' && this.props.path === \"/articledetail/:id\") {\n            let changeobj = this.props.detailcomments;\n            changeobj.comment.unshift({\n              user: this.props.user,\n              nickname: this.props.nickname,\n              headurl: this.props.headurl,\n              content: React.createElement(\"p\", {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 175\n                },\n                __self: this\n              }, this.state.value),\n              constructdate: ti\n            });\n            this.props.getdetailcomments(changeobj);\n            this.setState({\n              submitting: false,\n              value: ''\n            });\n            message.success('发送成功');\n          }\n\n          if (data === 'fail') {\n            message.error('发送失败');\n          }\n        });\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    this.setstate = () => {\n      this.setState({\n        value: ''\n      });\n    };\n\n    console.log(props);\n\n    if (props.path === \"/articledetail/:id\") {\n      console.log('xxx');\n    } else {\n      if (props.messagelist.length === 0) {\n        console.log('yy');\n        axios({\n          url: achieveurl,\n          method: 'post',\n          data: {}\n        }).then(res => {\n          let data = res.data.reverse();\n          props.getmessagelist(data);\n          this.setState({\n            value: ''\n          });\n        }, err => {\n          console.log(err);\n        });\n      }\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          submitting = _this$state.submitting,\n          value = _this$state.value;\n    const islogin = this.props.islogin;\n    let comments = [];\n\n    if (this.props.path === \"/articledetail/:id\" && this.props.detailcomments) {\n      if (this.props.detailcomments.comment) {\n        comments = this.props.detailcomments.comment;\n      }\n    } else {\n      if (this.props.messagelist) {\n        comments = this.props.messagelist;\n      }\n    }\n\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: {\n        span: 0\n      },\n      xl: {\n        span: 4\n      },\n      style: {\n        height: '100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Col, {\n      xs: {\n        span: 24\n      },\n      xl: {\n        span: 16\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, comments.length > 0 && React.createElement(CommentList, {\n      comments: comments,\n      user: this.props.user,\n      self: this.setstate.bind(this),\n      path: this.props.path,\n      articleid: this.props.detailcomments.dateid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), comments.length === 0 && React.createElement(Nocomment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), islogin === false && React.createElement(Commentstate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }), islogin === true && React.createElement(Comment, {\n      avatar: this.props.headurl,\n      content: React.createElement(Editor, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        submitting: submitting,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: {\n        span: 0\n      },\n      xl: {\n        span: 4\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect((state, props) => Object.assign({}, props, state), {\n  getmessagelist,\n  getdetailcomments\n})(Message);","map":{"version":3,"sources":["W:\\Study\\BlogReactUI\\reactblogproject\\src\\message\\message.js"],"names":["React","Comment","List","Form","Button","Input","Col","Row","message","moment","connect","getmessagelist","getdetailcomments","axios","achieveurl","messageurl","delmessageurl","TextArea","CommentList","comments","user","self","path","articleid","pageSize","length","item","e","preventDefault","sendobj","constructdate","index","i","url","method","data","then","res","success","splice","error","console","log","content","headurl","nickname","Editor","onChange","onSubmit","submitting","value","Nocomment","Commentstate","textAlign","fontSize","marginTop","Message","Component","constructor","props","state","handleSubmit","setState","setTimeout","comment","ti","format","id","detailcomments","dateid","messagelist","changeobj","unshift","handleChange","target","setstate","reverse","err","render","islogin","span","height","bind","Object","assign"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {Comment,List,Form,Button,Input,Col,Row,message} from 'antd';\r\nimport moment from 'moment';\r\nimport {connect} from 'react-redux';\r\nimport {getmessagelist,getdetailcomments} from '../store/action';\r\nimport axios from 'axios';\r\n\r\nconst achieveurl='api/getmessage';\r\nconst messageurl='api/addmessage';\r\nconst delmessageurl='api/delmessage';\r\n\r\nconst TextArea = Input.TextArea;\r\nconst CommentList = ({ comments,user,self,path,articleid }) => (\r\n  <List\r\n    pagination={{\r\n    pageSize: 5,\r\n    }}\r\n    dataSource={comments}\r\n    header={`${comments.length}条留言`}\r\n    itemLayout=\"horizontal\"\r\n    renderItem={(item)=>(\r\n      <List.Item actions={[\r\n        <a href='/' onClick={e=>{\r\n          e.preventDefault()\r\n          if(path!=='/articledetail/:id'){\r\n            let sendobj={'datetime':item.constructdate};\r\n            let index;\r\n            for(let i =0;i<comments.length;i++){\r\n              if(comments[i]['datetime']===item.constructdate){\r\n                index=i;\r\n              }\r\n            }\r\n            axios({\r\n              url:delmessageurl,\r\n              method:'post',\r\n              data:sendobj\r\n            }).then((res)=>{\r\n              let data=res.data;\r\n              if(data==='success'){\r\n                message.success(\"删除成功\");\r\n                comments.splice(index,1);            \r\n                self();\r\n              }else{\r\n                message.error(\"删除失败\");\r\n              }\r\n            })\r\n          }\r\n          else{\r\n            let sendobj={'datetime':item.constructdate,'dateid':articleid};\r\n            let index;\r\n            console.log(comments,'09090')\r\n            for(let i =0;i<comments.length;i++){\r\n              if(comments[i]['constructdate']===item.constructdate){\r\n                index=i;\r\n              }\r\n            }  \r\n            axios({\r\n              url:delmessageurl,\r\n              method:'post',\r\n              data:sendobj\r\n            }).then((res)=>{\r\n              let data=res.data;\r\n              if(data==='success'){\r\n                message.success(\"删除成功\");\r\n                comments.splice(index,1);            \r\n                self();\r\n              }else{\r\n                message.error(\"删除失败\");\r\n              }\r\n            })\r\n          }\r\n        }}>{(item.user===user)?'删除':''}</a>]} \r\n      >  \r\n      <Comment content={<p>{item.content}</p>} avatar={item.headurl} author={item.nickname} datetime={item.constructdate}/></List.Item> \r\n    )}\r\n  />\r\n);\r\nconst Editor = ({onChange,onSubmit,submitting,value})=>(\r\n<div>\r\n  <Form.Item>\r\n    <TextArea rows={4} onChange={onChange} value={value} />\r\n  </Form.Item>\r\n  <Form.Item>\r\n    <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\r\n        添加留言\r\n    </Button>\r\n  </Form.Item>\r\n</div>\r\n);\r\nconst  Nocomment=()=>(\r\n  <p className=\"nocomment\">No More Messages...</p>\r\n)\r\nconst Commentstate=()=>(\r\n<p style={{textAlign:'center',fontSize:'18px',marginTop:'50px'}}>You Can Leave Message After Login In.</p>\r\n)\r\n\r\nclass Message extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      console.log(props);\r\n      if(props.path===\"/articledetail/:id\"){\r\n        console.log('xxx');\r\n \r\n      }else{\r\n        if(props.messagelist.length===0){\r\n          console.log('yy')\r\n          axios({\r\n            url:achieveurl,\r\n            method:'post',\r\n            data:{}\r\n          }).then((res)=>{\r\n            let data=res.data.reverse();\r\n            props.getmessagelist(data);\r\n            this.setState({value:''});\r\n          },(err)=>{console.log(err)})\r\n        }\r\n      }\r\n    }  \r\n    state={\r\n      submitting: false,\r\n      value: '',\r\n      comments:[]\r\n    }\r\n    handleSubmit = () => {\r\n      if (!this.state.value) {\r\n        return;\r\n      }\r\n      this.setState({\r\n        submitting: true,\r\n      });\r\n      setTimeout(() => {\r\n        let nickname=this.props.nickname;\r\n        let user=this.props.user;\r\n        let headurl=this.props.headurl;\r\n        let comment=this.state.value;\r\n        let ti = moment().format(\"YYYY-MM-DD hh:mm:ss.SSS\");\r\n        let id;\r\n        if(this.props.detailcomments){\r\n          id = this.props.detailcomments.dateid;\r\n        }else{\r\n          id = '';\r\n        }\r\n        let sendobj={'nickname':nickname,'user':user,'headurl':headurl,'content':comment,'datetime':ti,'id':id}\r\n        axios({\r\n          url:messageurl,\r\n          method:'post',\r\n          data:sendobj\r\n        }).then((res)=>{\r\n          let data=res.data;\r\n          if(data==='success'&&this.props.path!==\"/articledetail/:id\"){\r\n            this.props.getmessagelist(\r\n              [\r\n                {\r\n                  user:this.props.user,\r\n                  nickname:this.props.nickname,\r\n                  headurl: this.props.headurl,\r\n                  content: <p>{this.state.value}</p>,\r\n                  constructdate: ti,\r\n                },\r\n                ...this.props.messagelist,\r\n              ]\r\n            )\r\n            this.setState({\r\n              submitting: false,\r\n              value: '',\r\n            }); \r\n            message.success('发送成功');\r\n          }\r\n          if(data==='success'&&this.props.path===\"/articledetail/:id\"){\r\n            let changeobj=this.props.detailcomments;\r\n            changeobj.comment.unshift({\r\n              user:this.props.user,\r\n              nickname:this.props.nickname,\r\n              headurl: this.props.headurl,\r\n              content: <p>{this.state.value}</p>,\r\n              constructdate: ti,\r\n            })\r\n            this.props.getdetailcomments(changeobj);\r\n            this.setState({\r\n              submitting: false,\r\n              value: '',\r\n            }); \r\n            message.success('发送成功');\r\n          }\r\n          if(data==='fail'){\r\n            message.error('发送失败');\r\n          }\r\n        })\r\n      }, 1000);\r\n    };\r\n    handleChange = e => {\r\n      this.setState({\r\n        value: e.target.value,\r\n      });\r\n    };\r\n    setstate=()=>{\r\n      this.setState({\r\n        value:''\r\n      })\r\n    }\r\n    render(){\r\n        const { submitting, value } = this.state;\r\n        const {islogin} =this.props;\r\n        let comments=[];\r\n        if(this.props.path===\"/articledetail/:id\"&&this.props.detailcomments){\r\n          if(this.props.detailcomments.comment){\r\n            comments=this.props.detailcomments.comment;\r\n          }\r\n        }else{\r\n          if(this.props.messagelist){\r\n            comments=this.props.messagelist;\r\n          }\r\n        }\r\n        return(\r\n            <Row>\r\n                <Col xs={{span:0}} xl={{span:4}} style={{height:'100px'}}></Col>\r\n                <Col xs={{span:24}} xl={{span:16}}>\r\n                {comments.length > 0 && <CommentList comments={comments} user={this.props.user} \r\n                self={this.setstate.bind(this)} path={this.props.path} articleid={this.props.detailcomments.dateid} />}\r\n                {comments.length === 0 && <Nocomment></Nocomment> }\r\n                {islogin === false && <Commentstate></Commentstate> }\r\n                {islogin ===true &&\r\n                    <Comment\r\n                      avatar={this.props.headurl}\r\n                      content={\r\n                        <Editor\r\n                          onChange={this.handleChange}\r\n                          onSubmit={this.handleSubmit}\r\n                          submitting={submitting}\r\n                          value={value}\r\n                        />\r\n                      }\r\n                    />\r\n                }\r\n                </Col>\r\n                <Col xs={{span:0}} xl={{span:4}}></Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default connect((state,props)=>(Object.assign({},props,state)),{getmessagelist,getdetailcomments} )(Message)\r\n"]},"metadata":{},"sourceType":"module"}