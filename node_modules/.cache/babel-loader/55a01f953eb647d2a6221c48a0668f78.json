{"ast":null,"code":"var _jsxFileName = \"W:\\\\Study\\\\BlogReactUI\\\\reactblogproject\\\\src\\\\login\\\\login.js\";\nimport React from 'react';\nimport { Form, Icon, Input, Button, Checkbox, message } from 'antd';\nimport { connect } from 'react-redux';\nimport { getlogin, getuser } from '../store/action';\nimport axios from 'axios';\nconst dburllogin = \"/api/dologin\";\n\nclass Loginpage extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          axios({\n            url: dburllogin,\n            method: 'post',\n            data: values\n          }).then(res => {\n            let data = res.data;\n\n            if (data === 'success') {\n              sessionStorage.setItem('user', values.username);\n              this.props.getuser(values.username);\n              this.props.getlogin();\n              message.success('登录成功');\n            } else {\n              message.error('用户名密码错误，登录失败');\n            }\n          });\n        }\n      });\n    };\n\n    this.forgetpassword = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        type: 'email',\n        message: '请输入邮箱格式'\n      }, {\n        required: true,\n        message: '请输入邮箱'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"mail\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u90AE\\u7BB1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, getFieldDecorator('remember', {\n      valuePropName: 'checked',\n      initialValue: true\n    })(React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"\\u8BB0\\u4F4F\\u6211\")), React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"/\",\n      onClick: this.forgetpassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\u5FD8\\u8BB0\\u5BC6\\u7801\")), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"login-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\u767B\\u5F55\")));\n  }\n\n}\n\nconst Loginpages = Form.create()(Loginpage);\nexport default connect((state, props) => Object.assign({}, props, state), {\n  getlogin,\n  getuser\n})(Loginpages);","map":{"version":3,"sources":["W:\\Study\\BlogReactUI\\reactblogproject\\src\\login\\login.js"],"names":["React","Form","Icon","Input","Button","Checkbox","message","connect","getlogin","getuser","axios","dburllogin","Loginpage","Component","handleSubmit","e","preventDefault","props","form","validateFields","err","values","url","method","data","then","res","sessionStorage","setItem","username","success","error","forgetpassword","render","getFieldDecorator","rules","type","required","color","valuePropName","initialValue","Loginpages","create","state","Object","assign"],"mappings":"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","sourcesContent":["import React from'react';\r\nimport {Form,Icon,Input,Button,Checkbox,message} from 'antd';\r\nimport {connect} from 'react-redux';\r\nimport {getlogin,getuser} from '../store/action'\r\nimport axios from 'axios';\r\n\r\nconst dburllogin=\"/api/dologin\";\r\n\r\nclass Loginpage extends React.Component{\r\n    handleSubmit = e => {\r\n      e.preventDefault();\r\n      this.props.form.validateFields((err, values)=>{\r\n        if (!err) {\r\n          axios({\r\n            url:dburllogin,\r\n              method:'post',          \r\n              data:values\r\n          }).then((res)=>{\r\n            let data=res.data;\r\n            if(data==='success'){\r\n              sessionStorage.setItem('user',values.username)\r\n              this.props.getuser(values.username);\r\n              this.props.getlogin();\r\n              message.success('登录成功');\r\n            }else{\r\n              message.error('用户名密码错误，登录失败')\r\n            }\r\n          })\r\n        }\r\n      });\r\n    };\r\n    forgetpassword=(e)=>{\r\n      e.preventDefault();\r\n    }\r\n    render(){\r\n        const { getFieldDecorator } = this.props.form;\r\n        return (\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Form.Item>\r\n              {getFieldDecorator('username', {\r\n                rules: [\r\n                  {\r\n                    type: 'email',\r\n                    message: '请输入邮箱格式',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: '请输入邮箱',\r\n                  },\r\n                ],\r\n              })(<Input prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入邮箱\"/>)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              {getFieldDecorator('password', {\r\n                rules: [{ required: true, message: '请输入密码' }],\r\n              })(<Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"请输入密码\" />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <div>\r\n                {getFieldDecorator('remember', {\r\n                  valuePropName: 'checked',\r\n                  initialValue: true,\r\n                })(<Checkbox>记住我</Checkbox>)}\r\n                <a className=\"login-form-forgot\" href=\"/\" onClick={this.forgetpassword}>\r\n                  忘记密码\r\n                </a>\r\n              </div>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        );\r\n    }\r\n}\r\nconst Loginpages = Form.create()(Loginpage);\r\n \r\nexport default connect((state,props)=>(Object.assign({},props,state)),{getlogin,getuser} )(Loginpages)"]},"metadata":{},"sourceType":"module"}